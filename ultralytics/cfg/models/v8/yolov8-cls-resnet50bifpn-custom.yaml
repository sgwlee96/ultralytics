# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license

# Ultralytics YOLOv8-cls image classification model with ResNet50 backbone
# Model docs: https://docs.ultralytics.com/models/yolov8
# Task docs: https://docs.ultralytics.com/tasks/classify

# Parameters
nc: 10 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-cls.yaml' will call yolov8-cls.yaml with scale 'n'
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]

# YOLOv8.0n backbone
# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, ResNetLayer, [3, 64, 1, True, 1]] # P1/2
  - [-1, 1, ResNetLayer, [64, 64, 1, False, 3]] # P2/4
  - [-1, 1, ResNetLayer, [256, 128, 2, False, 4]] # P3/8
  - [-1, 1, ResNetLayer, [512, 256, 2, False, 6]] # P4/16
  - [-1, 1, ResNetLayer, [1024, 512, 2, False, 3]] # P5/32

# Head with BiFPN and YOLOv8 Detection Heads
head:
  - [-1, 1, Conv, [512, 1, 1]] # P5/32
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 3], 1, Concat, [1]] # cat backbone P4
  - [-1, 3, C3, [512, False]] # P4/16 (index 8)

  - [-1, 1, Conv, [256, 1, 1]] # P4/16
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 2], 1, Concat, [1]] # cat backbone P3
  - [-1, 3, C3, [256, False]] # P3/8 (index 12)

  - [-1, 1, Conv, [256, 3, 2]] # P3 to P4
  - [[-1, 9, 3], 1, Concat, [1]] # cat P4 <--- BiFPN change
  - [-1, 3, C3, [512, False]] # P4/16 (index 15)

  - [-1, 1, Conv, [512, 3, 2]] # P4 to P5
  - [[-1, 5], 1, Concat, [1]] # cat head P5
  - [-1, 3, C3, [1024, False]] # P5/32 (index 18)

  - [[12, 15, 18], 1, Detect, [nc]] # Detect(P3, P4, P5)

